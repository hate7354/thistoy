<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EX"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 매핑할 메소드가 있는 인터페이스 찾는다 = 인터페이스와 동일하게 -->
<!-- id = 메소드명 -->
<!-- #{변수명} : preparestatement를 사용한다 변수명은 VO의 getter를 사용하는것과 같음 -->
<mapper namespace="com.base.mapper.UserMapper">


	<!-- 가입시 아이디 중복체크 반환값 -->
	<select id="idCheck" resultType="int">
		select count(*) from usertable
		where user_id = #{userId}
	</select>
	<!-- 가입시 메일중복체크 반환값 -->
	<select id="emailCheck" resultType="int">
		select count(*) from
		usertable
		where user_email = #{userEmail}
	</select>
	<!-- 회원가입 -->
	<insert id="register">
		insert into usertable (
		user_id,
		user_passwd,
		user_name,
		user_email,
		user_tel,
		user_address_post,
		user_address,
		user_address_detail,
		user_img
		) values (
		#{userId},
		#{userPasswd},
		#{userName},
		#{userEmail},
		#{userTel},
		#{userAddressPost},
		#{userAddress},
		#{userAddressDetail},
		#{userImg}
		)
	</insert>
	<select id="selectById" resultType="com.base.entity.UserVO">
		select * from
		usertable
		where
		user_id = #{userId}
	</select>
	<update id="userModify">
		update usertable
		set
		user_name = #{userName},
		user_passwd = #{newPassword},
		user_email =#{userEmail},
		user_tel =
		#{userTel},
		user_address_post = #{userAddressPost},
		user_address =
		#{userAddress},
		user_address_detail = #{userAddressDetail}
		where
		user_id
		= #{userId}
		and
		user_passwd =#{oldPassword}
	</update>
	<!-- 로그인시 비밀번호 체크 -->
	<select id="pwCheck" resultType="com.base.entity.UserVO">
		select
		* from
		usertable
		where
		user_id = #{userId}
	</select>
	<select id="findpw" resultType="com.base.entity.UserVO">
		select
		* from
		usertable
		where
		user_id = #{userId}
		and
		user_email = #{userEmail}
	</select>

	<select id="getmodify" resultType="com.base.entity.UserVO">
		select * from usertable where
		user_id = #{userId}
	</select>

	<insert id="insertSocialLogin" parameterType="UserVO">
		insert into usertable (user_id , user_social) values (#{userId} , #{userSocial})
	</insert>

	<select id="selectSocialLogin" resultType="Integer"
		parameterType="UserVO">
		select count(*) from usertable where user_id = #{userId}
	</select>
	
	<update id="passwdUpdate">
		update usertable set user_passwd = #{userPasswd} where user_id = #{userId}
	</update>
	<delete id="deleteUser">
	delete from usertable where user_id=#{userId}
	</delete>

</mapper>
